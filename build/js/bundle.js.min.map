{"version":3,"sources":["app.js","galeria.js"],"names":["mapa","map","L","setView","tileLayer","attribution","addTo","marker","bindPopup","openPopup","bindTooltip","openTooltip","scrollNav","document","querySelectorAll","forEach","enlace","addEventListener","e","preventDefault","querySelector","target","attributes","href","value","scrollIntoView","behavior","navegacionFija","barra","IntersectionObserver","entries","isIntersecting","classList","remove","add","observe","contador","countDownDate","Date","getTime","x","setInterval","now","distance","days","Math","floor","hours","minutes","seconds","getElementById","innerHTML","clearInterval","crearGaleria","galeria","i","imagen","createElement","src","dataset","imagenId","onclick","mostrarImagen","lista","appendChild","id","parseInt","overlay","body","cerrarImagen","textContent"],"mappings":"AAaA,SAAAA,OAEA,IAAAC,EAAAC,EAAAD,IAAA,QAAAE,QAAA,CAAA,oBAAA,oBAAA,IAEAD,EAAAE,UAAA,qDAAA,CACAC,YAAA,4FACAC,MAAAL,GAEAC,EAAAK,OAAA,CAAA,oBAAA,qBAAAD,MAAAL,GACAO,UAAA,uCACAC,YACAC,cACAC,cAIA,SAAAC,YAEAC,SAAAC,iBAAA,yBAGAC,SAAA,SAAAC,GACAA,EAAAC,iBAAA,SAAA,SAAAC,GACAA,EAAAC,iBAEAN,SAAAO,cAAAF,EAAAG,OAAAC,WAAAC,KAAAC,OAEAC,eAAA,CACAC,SAAA,iBAOA,SAAAC,iBAEA,MAAAC,EAAAf,SAAAO,cAAA,WAGA,IAAAS,sBAAA,SAAAC,GACAA,EAAA,GAAAC,eACAH,EAAAI,UAAAC,OAAA,QAEAL,EAAAI,UAAAE,IAAA,WAOAC,QAAAtB,SAAAO,cAAA,WAGA,SAAAgB,WAEA,IAAAC,EAAA,IAAAC,KAAA,yBAAAC,UAGAC,EAAAC,aAAA,WAGA,IAAAC,GAAA,IAAAJ,MAAAC,UAGAI,EAAAN,EAAAK,EAGAE,EAAAC,KAAAC,MAAAH,EAAA,OACAI,EAAAF,KAAAC,MAAAH,EAAA,MAAA,MACAK,EAAAH,KAAAC,MAAAH,EAAA,KAAA,KACAM,EAAAJ,KAAAC,MAAAH,EAAA,IAAA,KAGA9B,SAAAqC,eAAA,YAAAC,UAAAP,EAAA,KAAAG,EAAA,KACAC,EAAA,KAAAC,EAAA,KAGAN,EAAA,IACAS,cAAAZ,GACA3B,SAAAqC,eAAA,YAAAC,UAAA,aAEA,KCvFA,SAAAE,eAEA,MAAAC,EAAAzC,SAAAO,cAAA,qBAEA,IAAA,IAAAmC,EAAA,EAAAA,GAAA,GAAAA,IAAA,CAEA,MAAAC,EAAA3C,SAAA4C,cAAA,OACAD,EAAAE,IAAA,mBAAAH,SACAC,EAAAG,QAAAC,SAAAL,EAIAC,EAAAK,QAAAC,cAGA,MAAAC,EAAAlD,SAAA4C,cAAA,MACAM,EAAAC,YAAAR,GAEAF,EAAAU,YAAAD,IAIA,SAAAD,cAAA5C,GACA,MAAA+C,EAAAC,SAAAhD,EAAAG,OAAAsC,QAAAC,UAEAJ,EAAA3C,SAAA4C,cAAA,OACAD,EAAAE,IAAAF,EAAAE,IAAA,oBAAAO,SAEA,MAAAE,EAAAtD,SAAA4C,cAAA,OACAU,EAAAH,YAAAR,GACAW,EAAAnC,UAAAE,IAAA,WAKAiC,EAAAN,QAAA,WACAM,EAAAlC,SACAmC,EAAApC,UAAAC,OAAA,eAIA,MAAAoC,EAAAxD,SAAA4C,cAAA,KACAY,EAAAC,YAAA,IACAD,EAAArC,UAAAE,IAAA,cAGAmC,EAAAR,QAAA,WACAM,EAAAlC,SACAmC,EAAApC,UAAAC,OAAA,eAGAkC,EAAAH,YAAAK,GAIA,MAAAD,EAAAvD,SAAAO,cAAA,QACAgD,EAAAJ,YAAAG,GACAC,EAAApC,UAAAE,IAAA,cDjEArB,SAAAI,iBAAA,oBAAA,WACAjB,OACAY,YACAe,iBACAS,cCJAvB,SAAAI,iBAAA,oBAAA,WACAoC","file":"bundle.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\r\n    mapa();\r\n    scrollNav();\r\n    navegacionFija();\r\n    contador();\r\n    \r\n    \r\n    \r\n\r\n});\r\n\r\n\r\n\r\nfunction mapa(){\r\n\r\n    var map = L.map('mapa').setView([20.653266411977146, -103.39135671578771], 18);\r\n\r\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n    }).addTo(map);\r\n    \r\n    L.marker([20.653266411977146, -103.39135671578771]).addTo(map)\r\n        .bindPopup('Juega Retro. Boletos ya disponibles')\r\n        .openPopup()\r\n        .bindTooltip()\r\n        .openTooltip()\r\n\r\n}\r\n\r\nfunction scrollNav(){\r\n\r\n    const enlaces = document.querySelectorAll('.navegacion-principal');\r\n\r\n\r\n    enlaces.forEach(function (enlace){\r\n        enlace.addEventListener('click',function(e){\r\n            e.preventDefault();\r\n\r\n            const seccion = document.querySelector(e.target.attributes.href.value);\r\n\r\n            seccion.scrollIntoView({\r\n                behavior: 'smooth',\r\n            });\r\n        });\r\n    })\r\n}\r\n\r\n\r\nfunction navegacionFija(){\r\n\r\n    const barra =  document.querySelector('.header');\r\n\r\n    //registrar el interseccion Observer\r\n    const observer = new IntersectionObserver(function(entries){\r\n        if(entries[0].isIntersecting){\r\n            barra.classList.remove('fijo');\r\n        }else{\r\n            barra.classList.add('fijo');\r\n        }\r\n    });\r\n\r\n\r\n    //elemento a observar\r\n\r\n    observer.observe(document.querySelector('.video'));\r\n}\r\n\r\nfunction contador(){\r\n\r\n    var countDownDate = new Date(\"Dec 11, 2021 11:00:00\").getTime();\r\n\r\n\r\n    var x = setInterval(function() {\r\n\r\n        // Get today's date and time\r\n        var now = new Date().getTime();\r\n      \r\n        // Find the distance between now and the count down date\r\n        var distance = countDownDate - now;\r\n      \r\n        // Time calculations for days, hours, minutes and seconds\r\n        var days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n        var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n        var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n        var seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n      \r\n        // Display the result in the element with id=\"demo\"\r\n        document.getElementById(\"contador\").innerHTML = days + \"d \" + hours + \"h \"\r\n        + minutes + \"m \" + seconds + \"s \";\r\n      \r\n        // If the count down is finished, write some text\r\n        if (distance < 0) {\r\n          clearInterval(x);\r\n          document.getElementById(\"contador\").innerHTML = \"EXPIRED\";\r\n        }\r\n      }, 1000);\r\n}","document.addEventListener('DOMContentLoaded', function() {\r\n    crearGaleria();\r\n\r\n\r\n\r\n});\r\n\r\n\r\nfunction crearGaleria(){\r\n\r\n    const galeria = document.querySelector('.galeria-imagenes');\r\n\r\n    for(let i = 1; i<=12; i++) {\r\n\r\n        const imagen = document.createElement('IMG');\r\n        imagen.src = `build/img/thumb/${i}.webp`;\r\n        imagen.dataset.imagenId = i;\r\n\r\n\r\n        //aÃ±adir la funcion de mostrarImagen\r\n        imagen.onclick = mostrarImagen;\r\n\r\n\r\n        const lista = document.createElement('LI');\r\n        lista.appendChild(imagen);\r\n\r\n        galeria.appendChild(lista);\r\n    }\r\n}\r\n\r\nfunction mostrarImagen(e){\r\n    const id = parseInt(e.target.dataset.imagenId);\r\n    \r\n    const imagen = document.createElement('IMG');\r\n    imagen.src = imagen.src = `build/img/grande/${id}.webp`;\r\n\r\n    const overlay = document.createElement('DIV');\r\n    overlay.appendChild(imagen);\r\n    overlay.classList.add('overlay');\r\n    \r\n\r\n    //Cuando se da click, cerrar imagen\r\n\r\n    overlay.onclick = function () {\r\n        overlay.remove();\r\n        body.classList.remove('fijar-body');\r\n    }\r\n\r\n    //boton para cerrar imagen\r\n    const cerrarImagen = document.createElement('P');\r\n    cerrarImagen.textContent = 'X';\r\n    cerrarImagen.classList.add('btn-cerrar');\r\n\r\n    //cuando se presiona cierra la imagen\r\n    cerrarImagen.onclick = function () {\r\n        overlay.remove();\r\n        body.classList.remove('fijar-body');\r\n    }\r\n\r\n    overlay.appendChild(cerrarImagen);\r\n\r\n\r\n    //mostrar en el HTML\r\n    const body = document.querySelector('body');\r\n    body.appendChild(overlay);\r\n    body.classList.add('fijar-body');\r\n}"]}